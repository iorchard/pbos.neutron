---
- name: Setup controller | set kernel parameters
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: true
    sysctl_set: true
  become: true
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Setup controller | copy init and static conf files
  ansible.builtin.copy:
    dest: "{{ item.dest }}"
    src: "{{ ansible_os_family | lower }}{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  loop: "{{ os_service_init }}"
  become: true

- name: Setup | create systemd drop-in replacement directory
  ansible.builtin.file:
    path: "/etc/systemd/system/{{ item }}.d"
    state: directory
    owner: "root"
    group: "root"
    mode: "0755"
  become: true
  loop: "{{ os_systemd_service_name }}"

- name: Setup | create systemd drop-in replacement files for KillMode=mixed
  ansible.builtin.copy:
    dest: "/etc/systemd/system/{{ item }}.d/killmode.conf"
    content: |
      [Service]
      KillMode=mixed
    owner: "root"
    group: "root"
    mode: "0644"
  loop: "{{ os_systemd_service_name }}"
  become: true
  notify:
    - systemctl restart service

- name: Setup | reload systemd
  ansible.builtin.command: >-
    systemctl daemon-reload
  become: true

- name: Setup controller | template configuration
  ansible.builtin.template:
    dest: "{{ item.dest }}"
    src: "{{ ansible_os_family | lower }}{{ item.dest + '.j2' }}"
    owner: "root"
    group: "{{ os_service_name }}"
    mode: "0640"
  loop: "{{ os_service_conf }}"
  become: true
  changed_when: true
  notify:
    - systemctl restart service

- name: Setup controller | symlink ml2_conf.ini to plugin.ini
  ansible.builtin.file:
    dest: "/etc/neutron/plugin.ini"
    src: "/etc/neutron/plugins/ml2/ml2_conf.ini"
    owner: "root"
    group: "{{ os_service_name }}"
    mode: "0640"
    state: link
  become: true
  when: ansible_os_family == 'RedHat'

- name: Setup controller | populate database
  ansible.builtin.shell: |
    su -s /bin/sh  -c "neutron-db-manage \
      --config-file /etc/neutron/neutron.conf \
      --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" \
      neutron
  become: true
  delegate_to: "{{ groups['controller'][0] }}"
  run_once: true
...
